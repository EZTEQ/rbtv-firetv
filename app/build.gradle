apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"
apply plugin: "androidx.navigation.safeargs"
apply plugin: "io.fabric"
apply from: "$project.rootDir/tools/git-version.gradle"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "de.markhaehnel.rbtv.rocketbeanstv"
        minSdkVersion 22
        targetSdkVersion 28
        versionCode gitVersionCode
        versionName gitVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ["*.jar"], dir: "libs")

    def exomedia_version = "4.2.3"
    implementation "com.devbrackets.android:exomedia:$exomedia_version"

    def firebase_version = "16.0.7"
    implementation "com.google.firebase:firebase-core:$firebase_version"

    def crashlytics_version = "2.9.9"
    implementation "com.crashlytics.sdk.android:crashlytics:$crashlytics_version"

    def dagger_version = "2.21"
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    def retrofit_version = "2.5.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"

    def timber_version = "4.7.1"
    implementation "com.jakewharton.timber:timber:$timber_version"

    def support_version = "1.0.2"
    implementation "androidx.appcompat:appcompat:$support_version"

    def contstraint_version = "2.0.0-alpha3"
    implementation "androidx.constraintlayout:constraintlayout:$contstraint_version"

    def ktx_version = "1.0.1"
    implementation "androidx.core:core-ktx:$ktx_version"

    def lifecycle_version = "2.0.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    def glide_version = "4.8.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation "android.arch.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "android.arch.navigation:navigation-ui-ktx:$navigation_version"

    def m3u8parser_version = "0.6"
    implementation "io.lindstrom:m3u8-parser:$m3u8parser_version"

    def recycler_version = "1.0.0"
    implementation "androidx.recyclerview:recyclerview:$recycler_version"

    def socket_version = "1.0.0"
    implementation ("io.socket:socket.io-client:$socket_version") {
        exclude group: "org.json", module: "json"
    }

    def gson_version = "2.8.5"
    implementation "com.google.code.gson:gson:$gson_version"


    // TESTING
    def testing_core_version = "2.0.0"
    androidTestImplementation "androidx.arch.core:core-testing:$testing_core_version"

    def testing_espresso_version = "3.1.0-alpha4"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$testing_espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$testing_espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$testing_espresso_version"

    def testing_junit_version = "4.12"
    testImplementation "junit:junit:$testing_junit_version"

    def testing_mockwebserver_version = "3.8.1"
    testImplementation "com.squareup.okhttp3:mockwebserver:$testing_mockwebserver_version"

    def testing_arch_core_version = "1.1.1"
    testImplementation "android.arch.core:core-testing:$testing_arch_core_version"
}

apply plugin: "com.google.gms.google-services"
